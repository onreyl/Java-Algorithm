/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public static boolean isPalindrome(ListNode head) {
    if (head == null || head.next == null) {
        return true; 
    }

    ListNode slow = head, fast = head;
    while (fast != null && fast.next != null) {
        slow = slow.next;
        fast = fast.next.next;
    }

    
    slow = reverse(slow);

    ListNode curr = head;
    while (slow != null) {
        if (curr.val != slow.val) {
            return false;
        }
        curr = curr.next;
        slow = slow.next;
    }

    return true;
}

private static ListNode reverse(ListNode head) {
    ListNode prev = null, next;
    while (head != null) {
        next = head.next;
        head.next = prev;
        prev = head;
        head = next;
    }
    return prev;
}

}
